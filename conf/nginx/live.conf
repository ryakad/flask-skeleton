#
# Flask Skeleton
# Copyright (c) Ryan Kadwell <ryan@riaka.ca>
#

# the upstream component nginx needs to connect to
upstream liveflaskskeletonupstream {
   server unix:///tmp/liveflaskskeleton.sock;
}

# configuration of the live flask skeleton server
server {
   # the port your site will be served on
   listen *:443;

   server_name .flaskskeleton.net;
   charset utf-8;
   root __LIVE_WEB_DIR__;

   ssl on;
   ssl_certificate /etc/nginx/ssl/flaskskeleton.net.crt;
   ssl_certificate_key /etc/nginx/ssl/flaskskeleton.net.key;
   ssl_session_timeout 30m;

   # max upload size
   client_max_body_size 5M;

   access_log __LIVE_WEB_DIR__/log/access.log;
   error_log __LIVE_WEB_DIR__/log/error.log;

   error_page 503 @maintenance;
   location @maintenance {
      rewrite ^(.*)$ /html/error_503.html break;
   }

   error_page 500 @internalerror;
   location @internalerror {
      rewrite ^(.*)$ /html/error_500.html break;
   }

   # uncomment to switch into maintenance mode.
   # return 503;

   # TODO Test on beta first
   location /robots.txt {
      alias __LIVE_WEB_DIR__/skeleton/static/robots.txt;
   }

   location /sitemap.xml {
      alias __LIVE_WEB_DIR__/skeleton/static/sitemap.xml;
   }

   # serve static files directly for better performance
   location /static {
      alias __LIVE_WEB_DIR__/skeleton/static;
   }

   location / {
      uwsgi_pupstream;
      include uwsgi_params;
   }
}

# redirect non https traffic to https
server {
   listen *:80;
   server_name .flaskskeleton.net;
   rewrite ^ https://$server_name$request_uri? permanent;
}

# redirect requests for www.flaskskeleton.net to flaskskeleton.net
server {
  server_name www.flaskskeleton.net;
  rewrite ^ https://flaskskeleton.net$request_uri? permanent;
}
