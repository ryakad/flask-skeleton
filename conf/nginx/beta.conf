#
# Flask Skeleton
# Copyright (c) Ryan Kadwell <ryan@riaka.ca>
#

# the upstream component nginx needs to connect to
upstream betaflaskskeletonupstream {
   server unix:///tmp/betaflaskskeleton.sock;
}

# configuration of the beta flask skeleton server
server {
   listen *:443;

   server_name beta.flaskskeleton.com;
   charset utf-8;
   root __BETA_WEB_DIR__;

   ssl on;
   ssl_certificate /etc/nginx/ssl/beta.flaskskeleton.net.crt;
   ssl_certificate_key /etc/nginx/ssl/beta.flaskskeleton.net.key;
   ssl_session_timeout 30m;

   # max upload size
   client_max_body_size 5M;

   access_log __BETA_WEB_DIR__/log/access.log;
   error_log __BETA_WEB_DIR__/log/error.log;

   auth_basic "Restricted";
   auth_basic_user_file __BETA_WEB_DIR__/.htpasswd;

   error_page 503 @maintenance;
   location @maintenance {
      rewrite ^(.*)$ /html/error_503.html break;
   }

   error_page 500 @internalerror;
   location @internalerror {
      rewrite ^(.*)$ /html/error_500.html break;
   }

   # uncomment to switch into maintenance mode.
   # return 503;

   location /robots.txt {
      alias __BETA_WEB_DIR__/skeleton/static/robots.txt;
   }

   location /sitemap.xml {
      alias __BETA_WEB_DIR__/skeleton/static/sitemap.xml;
   }

   # serve static files directly for better performance
   location /static {
      alias __BETA_WEB_DIR__/skeleton/static;
   }

   location / {
      uwsgi_pass betaflaskskeletonupstream;
      include uwsgi_params;
   }
}

# Redirect non https traffic to https
server {
   listen *:80;
   server_name beta.flaskskeleton.com;
   rewrite ^ https://$server_name$request_uri? permanent;
}
